//Computer Rock, Paper, and Scissor Hands
var computerRock = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68),y+(h/150*14),h/150*16,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*29), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*-36, 12, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*-47, -1, 187);
    arc(x+(h/150*64), y+(h/150*41), h/150*7, h/150*-45, -1, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*-46, -1, 171);
    arc(x+(h/150*50), y+(h/150*24), h/150*52, h/150*9, -82, 82);
    popMatrix();
};

var computerScissor = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68), y+(h/150*14),h/150*19,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*29), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*-36, 12, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*-47, -1, 187);
    arc(x+(h/150*64), y+(h/150*43), h/150*7, h/150*67, -18, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*56, -10, 206);
    arc(x+(h/150*50), y+(h/150*38), h/150*52, h/150*9, -82, 82);
    popMatrix();
};

var computerPaper = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68), y+(h/150*14),h/150*19,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*32), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*40, -36, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*48, -23, 207);
    arc(x+(h/150*64), y+(h/150*43), h/150*7, h/150*67, -18, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*56, -10, 206);
    arc(x+(h/150*55), y+(h/150*35), h/150*52, h/150*9, 84, 280);
    popMatrix();
};

//Player Rock, Paper, and Scissor Hands
var rock = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68),y+(h/150*76),h/150*16,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*60), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*36, 12, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*47, -1, 187);
    arc(x+(h/150*64), y+(h/150*41), h/150*7, h/150*45, -1, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*46, -1, 171);
    arc(x+(h/150*50), y+(h/150*64), h/150*52, h/150*9, -82, 82);
    popMatrix();
};

var scissor = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68), y+(h/150*76),h/150*19,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*60), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*36, 12, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*47, -1, 187);
    arc(x+(h/150*64), y+(h/150*43), h/150*7, h/150*-67, -18, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*-56, -10, 206);
    arc(x+(h/150*50), y+(h/150*64), h/150*52, h/150*9, -82, 82);
    popMatrix();
};

var paper = function(x,y,h){
    pushMatrix();
    rotate(90);
    noStroke();
    fill(205, 167, 214);
    rect(x+(h/150*68), y+(h/150*76),h/150*19,h/150*13);
    ellipse(x+(h/150*68), y+(h/150*60), h/150*32, h/150*45);
    stroke(0, 0, 0);
    arc(x+(h/150*80), y+(h/150*45), h/150*7, h/150*-40, -36, 187);
    arc(x+(h/150*72), y+(h/150*41), h/150*7, h/150*-48, -23, 207);
    arc(x+(h/150*64), y+(h/150*43), h/150*7, h/150*-67, -18, 178);
    arc(x+(h/150*56), y+(h/150*46), h/150*7, h/150*-56, -10, 206);
    arc(x+(h/150*55), y+(h/150*64), h/150*52, h/150*9, 84, 280);
    popMatrix();
};

//Evan's Bitmoji
var drawHead = function(x,y,h)
{
noStroke();
 //neck
    noStroke();
    fill(255,244,189);
    rect(x+100*h/100, y+142*h/100, 34*h/100, 41*h/100);

//head
    fill(255,244,189);
    ellipse(x+100*h/100, y+100*h/100, 83*h/100, 100*h/100); 
    
    fill(184, 203, 214);
    arc(x+58*h/100, y+137*h/100, 28*h/100, 55*h/100, 0, 361);
    arc(x+142*h/100, y+137*h/100, 28*h/100, 55*h/100, 0, 361); 
    //hair
    fill(149, 69, 53);
    quad(x+52*h/100, y+95*h/100, x+70*h/100, y+62*h/100, x+108*h/100, y+50*h/100, x+70*h/100, y+99*h/100);
    quad(x+152*h/100, y+95*h/100, x+132*h/100, y+62*h/100, x+92*h/100, y+50*h/100, x+135*h/100, y+97*h/100); 
    arc(x+101*h/100, y+62*h/100, 61*h/100, 26*h/100, 175, 363);
    //eyes
    stroke(0, 0, 0);
    fill(255, 255, 255);
    ellipse(x+83*h/100, y+100*h/100,14*h/100,9*h/100);
    ellipse(x+117*h/100, y+100*h/100,14*h/100,9*h/100);
    
    noStroke(); 
    fill(111, 89, 235);
    ellipse(x+83*h/100, y+100*h/100,7*h/100,8*h/100);
    ellipse(x+117*h/100, y+100*h/100,7*h/100,8*h/100);
    
    fill(0, 0, 0);
    ellipse(x+83*h/100,y+100*h/100, 3.5*h/100, 3.5*h/100);
    ellipse(x+117*h/100,y+100*h/100,3.5*h/100,3.5*h/100);
    //nose
    stroke(0, 0, 0);
    fill(255,244,189);
    bezier(x+100*h/100, y+103*h/100, x+120*h/100, y+121*h/100, x+94*h/100, y+118*h/100, x+97*h/100, y+115*h/100);
    //smile
    fill(255, 255, 255);
    arc(x+101*h/100, y+128*h/100, 23*h/100, 10*h/100, 1, 180);
   
};

var drawBody = function(x,y,h)
{
//body
    fill(0, 0, 0);
    quad(x+161*h/100, y+210*h/100, x+45*h/100, y+210*h/100, x+60*h/100, y+154*h/100, x+100*h/100,y+162*h/100);
    quad(x+161*h/100, y+210*h/100, x+67*h/100, y+210*h/100, x+100*h/100, y+162*h/100, x+144*h/100, y+152*h/100);
//initials 
    fill(255, 255, 255);
    textSize(30*h/100);
    text("E E",x+77*h/100, y+170*h/100);
};

//Oscars Bitmoji
var drawBitmoji = function(x,y,h)
{
    drawHead(x,y,h);
    drawBody(x,y,h);
}; 

var drawResizeBitmoji = function(bitmojiX,bitmojiY,bitmojiHeight){

    var head = function(bitmojiX,bitmojiY,bitmojiHeight){
        noStroke();
        //fill to skintone
        fill(224, 172, 105);
        //head
        ellipse(bitmojiX+(bitmojiHeight/150*100), bitmojiY+(bitmojiHeight/150*100), bitmojiHeight/150*83, bitmojiHeight/150*100);
        };
   
    var hair = function(bitmojiX,bitmojiY,bitmojiHeight){
        //hair
        fill(120, 84, 60);
         //top hair
        quad(bitmojiX+(bitmojiHeight/150*143), bitmojiY+(bitmojiHeight/150*65), bitmojiX+(bitmojiHeight/150*58), bitmojiY+(bitmojiHeight/150*64), bitmojiX+(bitmojiHeight/150*81), bitmojiY+(bitmojiHeight/150*43), bitmojiX+(bitmojiHeight/150*119), bitmojiY+(bitmojiHeight/150*43));
        //left side hair
        quad(bitmojiX+(bitmojiHeight/150*54), bitmojiY+(bitmojiHeight/150*83), bitmojiX+(bitmojiHeight/150*59), bitmojiY+(bitmojiHeight/150*63), bitmojiX+(bitmojiHeight/150*77), bitmojiY+(bitmojiHeight/150*64), bitmojiX+(bitmojiHeight/150*59), bitmojiY+(bitmojiHeight/150*99));
        //right side hair
        quad(bitmojiX+(bitmojiHeight/150*143), bitmojiY+(bitmojiHeight/150*65), bitmojiX+(bitmojiHeight/150*148), bitmojiY+(bitmojiHeight/150*87), bitmojiX+(bitmojiHeight/150*140), bitmojiY+(bitmojiHeight/150*98), bitmojiX+(bitmojiHeight/150*126), bitmojiY+(bitmojiHeight/150*64));
        };
   
    var eyes = function(bitmojiX,bitmojiY,bitmojiHeight){
        //eyes
        fill(0, 0, 0);
        ellipse(bitmojiX+(bitmojiHeight/150*87), bitmojiY+(bitmojiHeight/150*99), bitmojiHeight/150*12, bitmojiHeight/150*7);
        ellipse(bitmojiX+(bitmojiHeight/150*111), bitmojiY+(bitmojiHeight/150*99), bitmojiHeight/150*12, bitmojiHeight/150*7);
        };
   
    var nose = function(bitmojiX,bitmojiY,bitmojiHeight){
        //nose
        stroke(8, 5, 1);
        strokeWeight(2);
        fill(224, 172, 105);
        bezier(bitmojiX+(bitmojiHeight/150*98), bitmojiY+(bitmojiHeight/150*101), bitmojiX+(bitmojiHeight/150*106), bitmojiY+(bitmojiHeight/150*112), bitmojiX+(bitmojiHeight/150*117), bitmojiY+(bitmojiHeight/150*120), bitmojiX+(bitmojiHeight/150*98), bitmojiY+(bitmojiHeight/150*120));
        };
   
    var mouth = function(bitmojiX,bitmojiY,bitmojiHeight){
        //mouth
        fill(255, 255, 255);
        arc(bitmojiX+(bitmojiHeight/150*101), bitmojiY+(bitmojiHeight/150*125), bitmojiHeight/150*30, bitmojiHeight/150*13, 1, 180);
        line(bitmojiX+(bitmojiHeight/150*86), bitmojiY+(bitmojiHeight/150*124), bitmojiX+(bitmojiHeight/150*115), bitmojiY+(bitmojiHeight/150*124));
        };
   
    var airpods = function(bitmojiX,bitmojiY,bitmojiHeight){
        //airpods
        stroke(250, 245, 245);
        strokeWeight(3);
        line(bitmojiX+(bitmojiHeight/150*62), bitmojiY+(bitmojiHeight/150*108), bitmojiX+(bitmojiHeight/150*64), bitmojiY+(bitmojiHeight/150*122));
        line(bitmojiX+(bitmojiHeight/150*139), bitmojiY+(bitmojiHeight/150*105), bitmojiX+(bitmojiHeight/150*137), bitmojiY+(bitmojiHeight/150*120));
        ellipse(bitmojiX+(bitmojiHeight/150*65), bitmojiY+(bitmojiHeight/150*105), bitmojiHeight/150*7, bitmojiHeight/150*5);
        ellipse(bitmojiX+(bitmojiHeight/150*136), bitmojiY+(bitmojiHeight/150*105), bitmojiHeight/150*7, bitmojiHeight/150*5);
        };
   
    var eyebrows = function(bitmojiX,bitmojiY,bitmojiHeight){
        //eyebrows
        fill(0, 0, 0);
        stroke(0, 0, 0);
        line(bitmojiX+(bitmojiHeight/150*93), bitmojiY+(bitmojiHeight/150*90), bitmojiX+(bitmojiHeight/150*80), bitmojiY+(bitmojiHeight/150*90));
        line(bitmojiX+(bitmojiHeight/150*118), bitmojiY+(bitmojiHeight/150*90), bitmojiX+(bitmojiHeight/150*106), bitmojiY+(bitmojiHeight/150*90));
        };
   
    var body = function(bitmojiX,bitmojiY,bitmojiHeight){
        //body
        fill(20, 14, 14);
        quad(bitmojiX+(bitmojiHeight/150*148), bitmojiY+(bitmojiHeight/150*232), bitmojiX+(bitmojiHeight/150*51), bitmojiY+(bitmojiHeight/150*230), bitmojiX+(bitmojiHeight/150*46), bitmojiY+(bitmojiHeight/150*153), bitmojiX+(bitmojiHeight/150*157), bitmojiY+(bitmojiHeight/150*153));
        };
   
    var nameInitials = function(bitmojiX,bitmojiY,bitmojiHeight){
        //name initials
        fill(255, 0, 0);
        textSize(bitmojiHeight/150*28);
        text("O.A", bitmojiX+(bitmojiHeight/150*75), bitmojiY+(bitmojiHeight/150*197));
        };
   
   
    head(bitmojiX,bitmojiY,bitmojiHeight);
    hair(bitmojiX,bitmojiY,bitmojiHeight);
    eyes(bitmojiX,bitmojiY,bitmojiHeight);
    nose(bitmojiX,bitmojiY,bitmojiHeight);
    mouth(bitmojiX,bitmojiY,bitmojiHeight);
    airpods(bitmojiX,bitmojiY,bitmojiHeight);
    eyebrows(bitmojiX,bitmojiY,bitmojiHeight);
    body(bitmojiX,bitmojiY,bitmojiHeight);
    nameInitials(bitmojiX,bitmojiY,bitmojiHeight);
};

//Current Scene changes allows scene changes. Each Scene or game screen has a certain scene number assigned to it. 
var currentScene = 0;
//Hand Value essentially just represents what the PLAYER has throws whether that be Rock, Paper, or Scissors. 
var handValue = 0; 
//Player Points keeps track of how many wins the user has in the best out of 3 match
var playerPoints = 0;
//Computer Points keeps track of how many wins the computer has in the best out of 3 match
var computerPoints = 0;
//pCurrent Hand allows for switching of the user hand shapes that appear on screen whether that be rock, paper, or scissors. 
var pCurrentHand = 0;
//cCurrent Hand allows for switching of the computer hand shapes that appear on screen whether that be rock, paper, or scissors. 
var cCurrentHand = 0;


//Denfines the button
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.color= config.color || color(204, 102, 255);
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

//Draws the button
Button.prototype.draw = function() {
    fill(204, 102, 255);
    rectMode(CENTER);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(CENTER, CENTER);
    text(this.label, this.x, this.y);
};

// Methods
Button.prototype.isMouseInside = function() {
    return mouseX > (this.x - this.width/2) &&
           mouseX < (this.x + this.width/2) &&
           mouseY > (this.y - this.height/2) &&
           mouseY < (this.y + this.height/2);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

// Check Winner function generates the computers choice of rock, paper, or scissors and then adds points based on the outcome that matches the hand and computer value. It also changes the cCurrentHand Value. 
var checkWinner = function(handValue, computerValue){
var computerValue = round(random(0.5,3.4));
        if      (handValue === 1 && computerValue === 1){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 0;
            }
        else if (handValue === 1 && computerValue === 2){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 1;    
            }
        else if (handValue === 1 && computerValue === 3){
            playerPoints = playerPoints + 1;
            computerPoints = computerPoints + 0;      
            }
        else if (handValue === 2 && computerValue === 1){
            playerPoints = playerPoints + 1;
            computerPoints = computerPoints + 0;      
            }
        else if (handValue === 2 && computerValue === 2){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 0;
            }
        else if (handValue === 2 && computerValue === 3){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 1;    
            }
        else if (handValue === 3 && computerValue === 1){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 1;    
            }
        else if (handValue === 3 && computerValue === 2){
            playerPoints = playerPoints + 1;
            computerPoints = computerPoints + 0;      
            }
        else if (handValue === 3 && computerValue === 3){
            playerPoints = playerPoints + 0;
            computerPoints = computerPoints + 0;            
        }
        if (computerValue === 1){
            cCurrentHand = 1;   
        }
        else if (computerValue === 2){
            cCurrentHand = 2;
        }
        else if (computerValue === 3){
            cCurrentHand = 3;
        }
        };

//Defines the start button
var startBtn = new Button({
    x: 198,
    y: 330,
    label: "Start",
    color: color(204, 102, 255),
    onClick: function() {
        //changes the scene to scene 1 which is the main game screen
        currentScene = 1;
    }
});

//Defines the home button
var homeBtn = new Button({
    x: 350,
    y: 40,
    width: 70,
    height:50,
    label: "Home",
    color: color(204, 102, 255),
    onClick: function() {
        //changes the scene to scene 0 which is the home screen
        currentScene = 0;
    }
});

//Defines the rock button
var rockBtn = new Button({
    x: 80,
    y: 350,
    width: 90,
    height:50,
    label: "Rock",
    color: color(204, 102, 255),
    onClick: function() {
        //The rock button calls the check winner function and inputs the handValue as 1 and also changes the pCurrentHand value to 1 making the user rock hand appear on the screen. 
        checkWinner(1);
        pCurrentHand = 1;
       
    }
});

//Defines the paper button
var paperBtn = new Button({
    x: 200,
    y: 350,
    width: 90,
    height:50,
    label: "Paper",
    color: color(204, 102, 255),
    onClick: function() {
        //The rock button calls the check winner function and inputs the handValue as 2 and also changes the pCurrentHand value to 2 making the user paper hand appear on the screen. 
        checkWinner(2);
        pCurrentHand = 2;
    }
});

//Defines the scissors button
var scissorsBtn = new Button({
    x: 320,
    y: 350,
    width: 90,
    height:50,
    label: "Scissors",
    color: color(204, 102, 255),
    onClick: function() {
        //The rock button calls the check winner function and inputs the handValue as 3 and also changes the pCurrentHand value to 3 making the user scissors hand appear on the screen
        checkWinner(3);
        pCurrentHand = 3;
    }
});
//Defines the home button that appears on the win screen 
var winScreenBtn = new Button({
    x: 200,
    y: 300,
    width: 90,
    height:50,
    label: "Home",
    color: color(204, 102, 255),
    onClick: function() {
        //The win screen button brings the player home once they have won the game. It also resets playerPoints and computerPoints to 0. 
        currentScene = 0;
        playerPoints = 0;
        computerPoints = 0;
    }
});
//Defines the restart button
var lossScreenBtn = new Button({
    x: 200,
    y: 300,
    width: 90,
    height:50,
    label: "Try Again",
    color: color(204, 102, 255),
    onClick: function() {
        //The loss screen button brings the player back to the game screen once they lose prompting them to try again.It also resets playerPoints and computerPoints to 0. 

        currentScene = 1;
        playerPoints = 0;
        computerPoints = 0;
    }
});

//drawSplash is a function simply made to draw the home screen. 
var drawSplash = function(){
    currentScene = 0;
    background(184, 203, 214);
    fill(204, 102, 255);
    noStroke();
    stroke(204, 204, 255);
    fill(204, 102, 255);
    textSize(35);
    textAlign(CENTER, CENTER);
    text("Rock, Paper, Scissors", 200, 55);
    textSize(15);
    startBtn.draw();
    textSize(15);
    ellipse(mouseX, mouseY, 20, 20);
    text("By Evan Engelhardt", 200, 90);
    text("& Oscar Aquino", 200, 115);
    textAlign(LEFT,TOP);
    drawResizeBitmoji(65,100,100);
    drawBitmoji(205,95,75);
};

//The mouse clicked function contains various handle mouse clicks that are active during different scenes
mouseClicked = function() {
    if (currentScene === 0){
        startBtn.handleMouseClick();
    }
    else if (currentScene === 1){
        homeBtn.handleMouseClick();
        rockBtn.handleMouseClick();
        paperBtn.handleMouseClick();
        scissorsBtn.handleMouseClick();
    }
    else if (currentScene === 2){
        winScreenBtn.handleMouseClick();
    }
    else if (currentScene === 3){
        lossScreenBtn.handleMouseClick();
    }
};
    

draw = function() {
    //draws the home screen if current scene is 0
    if (currentScene === 0){
        drawSplash();
    }
    //draws the game screen if current scene is 1
    else if (currentScene === 1) {
        strokeWeight(3);
        background(184, 203, 214);
        fill(140, 20, 180);
        rect(200,40,400,80);
        rect(200,350,400,80);
        homeBtn.draw();
        rockBtn.draw();
        paperBtn.draw();
        scissorsBtn.draw();
        strokeWeight(6);
        line(0, 80, 400, 80);
        line(0, 310, 400, 310);
        fill(0, 0, 0);
        //shows how many wins both the user and computer have 
        text("Your Wins: " + playerPoints, 65, 25);
        text("Computer Wins: " + computerPoints, 88, 50);
        //this conditional changes the scene to 2 which is the win screen when the player has won 2 rounds in a row because then they will have won best out of 3. 
        if (playerPoints === 2){
            currentScene = 2; 
        }
        //this conditional changes the scene to 3 which is the loss screen when the computer has won 2 rounds. 
        else if (computerPoints === 2){
            currentScene = 3;
        }
        //this conditional essentially just draws the win screen and resets both the computers and users current hands to 0 so none of the hand shapes appear on the screen
        if (currentScene === 2){
            background(140, 20, 180);
            textSize(40);
            text("You Won!", 200, 200);
            winScreenBtn.draw();
            pCurrentHand = 0;
            cCurrentHand = 0;
        }
                //this conditional  just draws the loss screen and resets both the computers and users current hands to 0 so none of the hand shapes appear on the screen
        else if (currentScene === 3){
            background(140, 20, 180);
            textSize(40);
            text("You Lost", 200, 200);
            lossScreenBtn.draw();
            pCurrentHand = 0;
            cCurrentHand = 0;

        }
        // This set of conditionals decides which hand shape will be shown based on the players current hand value
        if (pCurrentHand === 0){
        }
        else if(pCurrentHand === 1){
        rock(85,-200,275);
        }
        else if(pCurrentHand === 2){
        paper(85,-200,275);
        }
        else if(pCurrentHand === 3){
        scissor(85,-200,275);
        }
        // This set of conditionals decides which hand shape will be shown based on the computers current hand value
        if (cCurrentHand === 0){
        }
        else if(cCurrentHand === 1){
        computerRock(85,-370,275);
        }
        else if(cCurrentHand === 2){
        computerPaper(85,-370,275);
        }
        else if(cCurrentHand === 3){
        computerScissor(85,-370,275);
        }
}
};

